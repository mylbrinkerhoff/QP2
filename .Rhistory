remotes::install_github("tallguyjenks/gruvboxr")
install.packages("remotes")
remotes::install_github("tallguyjenks/gruvboxr")
gruvboxr::install_theme()
load("~/Documents/1_Projects/QP2/.RData")
setwd("~/Documents/1_Projects/QP2")
# Install packages
# install.packages("tidyverse")
# install.packages("scales")
library(tidyverse)
# colorblind friendly colors
# The palette with grey:
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# To use for fills, add
scale_fill_manual(values=cbPalette)
# To use for line and point colors, add
scale_colour_manual(values=cbPalette)
# custom theme for plotting
my.theme <- theme(axis.text = element_text(colour="black", size=25),
text = element_text(size=26),
title = element_text(size=29),
axis.title.x=  element_text(vjust=-0.45),
axis.title.y = element_text(vjust=.2),
axis.ticks = element_line(colour="black"),
axis.line = element_line(),
legend.position = c(.8,.9),
legend.background = element_rect(size=0.25,
linetype="solid",
color = "black"),
)
theme2 <- theme(axis.text = element_text(colour="black", size=25),
text = element_text(size=26),
title = element_text(size=29),
axis.title.x=  element_text(vjust=-0.45),
axis.title.y = element_text(vjust=.2),
axis.ticks = element_line(colour="black"),
axis.line = element_line(),
legend.background = element_rect(size=0.25,
linetype="solid",
color = "black"),
)
# Adding the csv/txt file.
# This is the file that is generated from VoiceSauce.
zapotecVS <- read.table("SLZTone.txt", header = T, sep = "\t")
# Checking for Problems with the greps
Problems <- zapotecVS %>% filter(tone == "N")
Problems
# Two way table for tone and phonation
tone_phonation <- table(zapotecVS$tone, zapotecVS$phonation)
tone_phonation
zapotecVS$phonation <- factor(ifelse(grepl("modal", zapotecVS$Filename, ignore.case = T), "Modal",
ifelse(grepl("breathy", zapotecVS$Filename, ignore.case = T), "Breathy",
ifelse(grepl("checked", zapotecVS$Filename, ignore.case = T), "Checked", "Laryngealized"
)
)
), levels = c("Modal", "Breathy", "Checked", "Laryngealized"))
zapotecVS$tone <- ifelse(grepl("_H.mat", zapotecVS$Filename, ignore.case = F), "H",
ifelse(grepl("_M.mat", zapotecVS$Filename, ignore.case = F), "M",
ifelse(grepl("_L.mat", zapotecVS$Filename, ignore.case = F), "L",
ifelse(grepl("_HL.mat", zapotecVS$Filename, ignore.case = F), "HL",
ifelse(grepl("_MH.mat", zapotecVS$Filename, ignore.case = F), "MH", "N"
)
)
)
)
)
# Checking for Problems with the greps
Problems <- zapotecVS %>% filter(tone == "N")
Problems
# Two way table for tone and phonation
tone_phonation <- table(zapotecVS$tone, zapotecVS$phonation)
tone_phonation
# Normalize time
# takes in the data frame and adds a column for normalized time.
zapotec_times <- zapotecVS %>%
mutate(normalized_time = round((t_ms-seg_Start)/(seg_End-seg_Start),digits = 2))
zapotec_times2 <- zapotecVS %>%
mutate(normalized_time = round((t_ms-seg_Start)/(seg_End-seg_Start),digits = 2)) %>%
filter(tone != 'M' & tone != 'MH' )
# Plotting the tone
# ggplot of normalized tone (y-axis) over time (x axis)
tone_plot <- ggplot(data = zapotec_times,
aes(x = normalized_time,
y=strF0,
group=tone,
colour=tone,
fill=tone)) +
geom_smooth(method = "loess") +
labs(title = "FSR's average F0 contours across tonal patterns",
x = "Normalized time (% of vowel duration)",
y = "F0 (Hz)",
colour = "Tonal Pattern") +
theme_bw() +
guides(colour = guide_legend("Tonal Pattern", ncol = 5),
fill = guide_legend("Tonal Pattern", ncol = 5) ) +
my.theme
print(tone_plot)
# Plotting the tone
# ggplot of normalized tone (y-axis) over time (x axis)
tone_plot <- ggplot(data = zapotec_times,
aes(x = normalized_time,
y=strF0,
group=tone,
colour=tone,
fill=tone)) +
geom_smooth(method = "loess") +
labs(title = "FSR's average F0 contours across tonal patterns",
x = "Normalized time (% of vowel duration)",
y = "F0 (Hz)",
colour = "Tonal Pattern") +
theme_bw() +
guides(colour = guide_legend("Tonal Pattern", ncol = 5),
fill = guide_legend("Tonal Pattern", ncol = 5) ) +
my.theme
print(tone_plot)
library(ggthemes)
# Install packages
# install.packages("tidyverse")
# install.packages("scales")
install.packages("ggthemes")
library(ggthemes)
# cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#
# # The palette with black:
# cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#
# # To use for fills, add
# scale_fill_manual(values=cbPalette)
#
# # To use for line and point colors, add
# scale_colour_manual(values=cbPalette)
scale_color_discrete <- scale_color_colorblind
# Plotting the tone
# ggplot of normalized tone (y-axis) over time (x axis)
tone_plot <- ggplot(data = zapotec_times,
aes(x = normalized_time,
y=strF0,
group=tone,
colour=tone,
fill=tone)) +
geom_smooth(method = "loess") +
labs(title = "FSR's average F0 contours across tonal patterns",
x = "Normalized time (% of vowel duration)",
y = "F0 (Hz)",
colour = "Tonal Pattern") +
theme_bw() +
guides(colour = guide_legend("Tonal Pattern", ncol = 5),
fill = guide_legend("Tonal Pattern", ncol = 5) ) +
my.theme
print(tone_plot)
# cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#
# # The palette with black:
# cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
#
# # To use for fills, add
# scale_fill_manual(values=cbPalette)
#
# # To use for line and point colors, add
# scale_colour_manual(values=cbPalette)
scale_color_discrete <- scale_color_colorblind
# Plotting the tone
# ggplot of normalized tone (y-axis) over time (x axis)
tone_plot <- ggplot(data = zapotec_times,
aes(x = normalized_time,
y=strF0,
group=tone,
colour=tone,
fill=tone)) +
geom_smooth(method = "loess") +
labs(title = "FSR's average F0 contours across tonal patterns",
x = "Normalized time (% of vowel duration)",
y = "F0 (Hz)",
colour = "Tonal Pattern") +
theme_bw() +
guides(colour = guide_legend("Tonal Pattern", ncol = 5),
fill = guide_legend("Tonal Pattern", ncol = 5) ) #+
print(tone_plot)
# The palette with grey:
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# To use for fills, add
scale_fill_manual(values=cbPalette)
# Plotting the tone
# ggplot of normalized tone (y-axis) over time (x axis)
tone_plot <- ggplot(data = zapotec_times,
aes(x = normalized_time,
y=strF0,
group=tone,
colour=tone,
fill=tone)) +
geom_smooth(method = "loess") +
labs(title = "FSR's average F0 contours across tonal patterns",
x = "Normalized time (% of vowel duration)",
y = "F0 (Hz)",
colour = "Tonal Pattern") +
theme_bw() +
guides(colour = guide_legend("Tonal Pattern", ncol = 5),
fill = guide_legend("Tonal Pattern", ncol = 5) ) #+
print(tone_plot)
source("~/Documents/1_Projects/QP2/ZapotecTone.R", echo=TRUE)
HA3_CheckedLaryngeal <- ggplot(data = zapotec_CL,
aes(x = normalized_time,
y=HA3c,
linetype=phonation,
colour=tone)
) +
geom_smooth(method = "loess") +
labs(title = "Laryngeal and Checked H1-A3",
x = "Normalized time (% of vowel duration)",
y = "H1-A3 (dB)") +
theme_bw() +
guides(colour = guide_legend("Tone"),
linetype = guide_legend("Phonation")
) #+
HA3_CheckedLaryngeal <- ggplot(data = zapotec_CL,
aes(x = normalized_time,
y=HA3c,
linetype=phonation,
colour=tone)
) +
geom_smooth(method = "loess") +
labs(title = "Laryngeal and Checked H1-A3",
x = "Normalized time (% of vowel duration)",
y = "H1-A3 (dB)") +
theme_bw() +
guides(colour = guide_legend("Tone"),
linetype = guide_legend("Phonation")
) #+
View(std.error)
